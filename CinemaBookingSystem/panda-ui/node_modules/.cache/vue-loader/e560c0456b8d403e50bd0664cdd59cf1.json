{"remainingRequest":"F:\\Code\\CinemaBookingSystem\\panda-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Code\\CinemaBookingSystem\\panda-ui\\src\\views\\movie\\MovieCategory.vue?vue&type=script&lang=js","dependencies":[{"path":"F:\\Code\\CinemaBookingSystem\\panda-ui\\src\\views\\movie\\MovieCategory.vue","mtime":1714207564413},{"path":"F:\\Code\\CinemaBookingSystem\\panda-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714209991146},{"path":"F:\\Code\\CinemaBookingSystem\\panda-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1714209992890},{"path":"F:\\Code\\CinemaBookingSystem\\panda-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714209991146},{"path":"F:\\Code\\CinemaBookingSystem\\panda-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1714209993504}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJNb3ZpZUNhdGVnb3J5IiwNCiAgLy8gdGhpcy4kbWVzc2FnZeWSjHRoaXMuJGNvbmZpcm3pg73lsZ7kuo7ljp/lnovmjILovb0sIOWcqGVsZW1lbnQuanPkuK3phY3nva4NCiAgLy8gVnVlLnByb3RvdHlwZS4kbWVzc2FnZSA9IE1lc3NhZ2UNCiAgLy8gVnVlLnByb3RvdHlwZS4kY29uZmlybSA9IE1lc3NhZ2VCb3guY29uZmlybQ0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBxdWVyeUluZm86IHsNCiAgICAgICAgcXVlcnk6ICcnLA0KICAgICAgICBwYWdlTnVtOiAxLA0KICAgICAgICBwYWdlU2l6ZTogNw0KICAgICAgfSwNCiAgICAgIG1vdmllQ2F0ZWdvcnlMaXN0OiBbXSwNCiAgICAgIHRvdGFsOiAwLA0KICAgICAgLy/mjqfliLblr7nor53moYbnmoTmmL7npLrkuI7pmpDol48NCiAgICAgIGFkZERpYWxvZ1Zpc2libGU6IGZhbHNlLA0KICAgICAgLy/mt7vliqDnsbvliKvnmoTooajljZXmlbDmja4NCiAgICAgIGFkZEZvcm06IHsNCiAgICAgICAgbW92aWVDYXRlZ29yeU5hbWU6ICcnDQogICAgICB9LA0KICAgICAgLy/pqozor4HooajljZXop4TliJnlr7nosaENCiAgICAgIGFkZEZvcm1SdWxlczogew0KICAgICAgICBtb3ZpZUNhdGVnb3J5TmFtZTogWw0KICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXnlLXlvbHnsbvliKsnLCB0cmlnZ2VyOiAnYmx1cicgfQ0KICAgICAgICBdDQogICAgICB9LA0KICAgICAgZWRpdERpYWxvZ1Zpc2libGU6IGZhbHNlLA0KICAgICAgZWRpdEZvcm06IHt9LA0KICAgICAgZWRpdEZvcm1SdWxlczogew0KICAgICAgICBtb3ZpZUNhdGVnb3J5TmFtZTogWw0KICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXnlLXlvbHnsbvliKsnLCB0cmlnZ2VyOiAnYmx1cicgfQ0KICAgICAgICBdDQogICAgICB9LA0KICAgICAgbXVsdGlwbGVTZWxlY3Rpb246IFtdDQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMuZ2V0TW92aWVDYXRlZ29yeUxpc3QoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgZ2V0TW92aWVDYXRlZ29yeUxpc3QoKSB7DQogICAgICBjb25zdCBfdGhpcyA9IHRoaXM7DQogICAgICBheGlvcy5nZXQoJ3N5c01vdmllQ2F0ZWdvcnkvZmluZCcsIHtwYXJhbXM6IF90aGlzLnF1ZXJ5SW5mb30pLnRoZW4ocmVzcCA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKHJlc3ApDQogICAgICAgIF90aGlzLm1vdmllQ2F0ZWdvcnlMaXN0ID0gcmVzcC5kYXRhLmRhdGE7DQogICAgICAgIF90aGlzLnRvdGFsID0gcmVzcC5kYXRhLnRvdGFsOw0KICAgICAgICBfdGhpcy5xdWVyeUluZm8ucGFnZVNpemUgPSByZXNwLmRhdGEucGFnZVNpemU7DQogICAgICAgIF90aGlzLnF1ZXJ5SW5mby5wYWdlTnVtID0gcmVzcC5kYXRhLnBhZ2VOdW07DQogICAgICB9KQ0KICAgIH0sDQogICAgaGFuZGxlU2l6ZUNoYW5nZShuZXdTaXplKSB7DQogICAgICB0aGlzLnF1ZXJ5SW5mby5wYWdlU2l6ZSA9IG5ld1NpemUNCiAgICAgIHRoaXMuZ2V0TW92aWVDYXRlZ29yeUxpc3QoKQ0KICAgICAgY29uc29sZS5sb2cobmV3U2l6ZSkNCiAgICB9LA0KICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UobmV3UGFnZSkgew0KICAgICAgdGhpcy5xdWVyeUluZm8ucGFnZU51bSA9IG5ld1BhZ2UNCiAgICAgIHRoaXMuZ2V0TW92aWVDYXRlZ29yeUxpc3QoKQ0KICAgICAgY29uc29sZS5sb2cobmV3UGFnZSkNCiAgICB9LA0KICAgIC8vIOebkeWQrOa3u+WKoOWvueivneahhueahOWFs+mXreS6i+S7tg0KICAgIGFkZERpYWxvZ0Nsb3NlZCgpew0KICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnJlc2V0RmllbGRzKCkNCiAgICB9LA0KICAgIC8vIOebkeWQrOa3u+WKoOaMiemSrg0KICAgIGFkZE1vdmllQ2F0ZWdvcnkoKXsNCiAgICAgIGNvbnN0IF90aGlzID0gdGhpczsNCiAgICAgIHRoaXMuJHJlZnMuYWRkRm9ybVJlZi52YWxpZGF0ZShhc3luYyB2YWxpZCA9PiB7DQogICAgICAgIGNvbnNvbGUubG9nKHZhbGlkKQ0KICAgICAgICBpZiAoIXZhbGlkKSByZXR1cm4NCiAgICAgICAgLy/pooTmoKHpqozmiJDlip/vvIzlj5HnvZHnu5zor7fmsYINCiAgICAgICAgYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJw0KICAgICAgICBhd2FpdCBheGlvcy5wb3N0KCdzeXNNb3ZpZUNhdGVnb3J5JywgSlNPTi5zdHJpbmdpZnkoX3RoaXMuYWRkRm9ybSkpLnRoZW4ocmVzcCA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2cocmVzcCkNCiAgICAgICAgICBpZiAocmVzcC5kYXRhLmNvZGUgIT09IDIwMCl7DQogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmt7vliqDnlLXlvbHnsbvliKvlpLHotKXvvIEnKQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICAgICAgLy/pmpDol4/mt7vliqDlr7nor53moYYNCiAgICAgICAgdGhpcy5hZGREaWFsb2dWaXNpYmxlID0gZmFsc2UNCiAgICAgICAgLy/ph43mlrDliqDovb3liJfooagNCiAgICAgICAgdGhpcy5nZXRNb3ZpZUNhdGVnb3J5TGlzdCgpDQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5re75Yqg55S15b2x57G75Yir5oiQ5Yqf77yBJykNCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDmmL7npLrkv67mlLnlr7nor53moYbvvIzlm57mmL7mlbDmja4NCiAgICBzaG93RWRpdERpYWxvZyhpZCl7DQogICAgICBjb25zdCBfdGhpcyA9IHRoaXMNCiAgICAgIGF4aW9zLmdldCgnc3lzTW92aWVDYXRlZ29yeS8nICsgaWQgKS50aGVuKHJlc3AgPT4gew0KICAgICAgICBjb25zb2xlLmxvZyhyZXNwKQ0KICAgICAgICBfdGhpcy5lZGl0Rm9ybSA9IHJlc3AuZGF0YS5kYXRhDQogICAgICB9KQ0KICAgICAgdGhpcy5lZGl0RGlhbG9nVmlzaWJsZSA9IHRydWUNCiAgICB9LA0KICAgIC8vIOebkeWQrOS/ruaUueWvueivneahhueahOWFs+mXreS6i+S7tg0KICAgIGVkaXREaWFsb2dDbG9zZWQoKXsNCiAgICAgIHRoaXMuJHJlZnMuZWRpdEZvcm1SZWYucmVzZXRGaWVsZHMoKQ0KICAgIH0sDQogICAgLy8g5L+u5pS557G75Yir5YiG57G75L+h5oGv5bm25o+Q5LqkDQogICAgZWRpdE1vdmllQ2F0ZWdvcnlJbmZvKCl7DQogICAgICB0aGlzLiRyZWZzLmVkaXRGb3JtUmVmLnZhbGlkYXRlKGFzeW5jIHZhbGlkID0+IHsNCiAgICAgICAgY29uc3QgX3RoaXMgPSB0aGlzDQogICAgICAgIGlmICghdmFsaWQpIHJldHVybg0KICAgICAgICBheGlvcy5kZWZhdWx0cy5oZWFkZXJzLnB1dFsnQ29udGVudC1UeXBlJ10gPSAnYXBwbGljYXRpb24vanNvbicNCiAgICAgICAgYXdhaXQgYXhpb3MucHV0KCdzeXNNb3ZpZUNhdGVnb3J5JywgSlNPTi5zdHJpbmdpZnkoX3RoaXMuZWRpdEZvcm0pKS50aGVuKHJlc3AgPT4gew0KICAgICAgICAgIGlmIChyZXNwLmRhdGEuY29kZSAhPT0gMjAwKXsNCiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+S/ruaUueeUteW9seexu+WIq+Wksei0pe+8gScpDQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgICB0aGlzLmVkaXREaWFsb2dWaXNpYmxlID0gZmFsc2UNCiAgICAgICAgdGhpcy5nZXRNb3ZpZUNhdGVnb3J5TGlzdCgpDQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5L+u5pS555S15b2x57G75Yir5oiQ5Yqf77yBJykNCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDnm5HlkKzlpJrpgInmoYblj5jljJYNCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2UodmFsKXsNCiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSB2YWwNCiAgICB9LA0KICAgIGFzeW5jIG11bHRpcGxlRGVsZXRlKCl7DQogICAgICBjb25zdCBfdGhpcyA9IHRoaXMNCiAgICAgIC8v6K+i6Zeu55So5oi35piv5ZCm56Gu6K6k5Yig6ZmkDQogICAgICBjb25zdCByZXNwID0gYXdhaXQgdGhpcy4kY29uZmlybSgn5q2k5pON5L2c5bCG5rC45LmF5Yig6Zmk6L+Z5Lqb5p2h55uuLCDmmK/lkKbnu6fnu60/JywgJ+aPkOekuicsIHsNCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLA0KICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywNCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnDQogICAgICB9KS5jYXRjaChlcnIgPT4gZXJyKQ0KDQogICAgICAvLyDnlKjmiLfnoa7orqTliKDpmaQsIHJlc3DkuLrlrZfnrKbkuLIiY29uZmlybSINCiAgICAgIC8vIOeUqOaIt+WPlua2iOWIoOmZpO+8jHJlc3DkuLrlrZfnrKbkuLIiY2FuY2VsIg0KICAgICAgaWYgKHJlc3AgPT09ICdjYW5jZWwnKXsNCiAgICAgICAgcmV0dXJuIF90aGlzLiRtZXNzYWdlLmluZm8oJ+W3suWPlua2iOWIoOmZpCcpDQogICAgICB9DQoNCiAgICAgIGxldCBpZHMgPSBbXQ0KICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdGlvbi5mb3JFYWNoKGRhdGEgPT4gew0KICAgICAgICBpZHMucHVzaChkYXRhLm1vdmllQ2F0ZWdvcnlJZCkNCiAgICAgIH0pDQogICAgICBhd2FpdCBheGlvcy5kZWxldGUoJ3N5c01vdmllQ2F0ZWdvcnkvJyArIGlkcykudGhlbihyZXNwID0+IHsNCiAgICAgICAgaWYgKHJlc3AuZGF0YS5jb2RlICE9PSAyMDApew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5om56YeP5Yig6Zmk55S15b2x57G75Yir5aSx6LSl77yBJykNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICAgIHRoaXMuZ2V0TW92aWVDYXRlZ29yeUxpc3QoKQ0KICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmibnph4/liKDpmaTnlLXlvbHnsbvliKvmiJDlip/vvIEnKQ0KICAgIH0sDQogICAgLy/moLnmja5pZOWIoOmZpOWvueW6lOeahOexu+WIq+WIhuexuw0KICAgIGFzeW5jIGRlbGV0ZU1vdmllQ2F0ZWdvcnlCeUlkKGlkKXsNCiAgICAgIGNvbnN0IF90aGlzID0gdGhpcw0KICAgICAgLy/or6Lpl67nlKjmiLfmmK/lkKbnoa7orqTliKDpmaQNCiAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCB0aGlzLiRjb25maXJtKCfmraTmk43kvZzlsIbmsLjkuYXliKDpmaTor6XmnaHnm64sIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6Jywgew0KICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsDQogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLA0KICAgICAgICB0eXBlOiAnd2FybmluZycNCiAgICAgIH0pLmNhdGNoKGVyciA9PiBlcnIpDQoNCiAgICAgIC8vIOeUqOaIt+ehruiupOWIoOmZpCwgcmVzcOS4uuWtl+espuS4siJjb25maXJtIg0KICAgICAgLy8g55So5oi35Y+W5raI5Yig6Zmk77yMcmVzcOS4uuWtl+espuS4siJjYW5jZWwiDQogICAgICBjb25zb2xlLmxvZyhyZXNwKQ0KICAgICAgaWYgKHJlc3AgPT09ICdjYW5jZWwnKXsNCiAgICAgICAgcmV0dXJuIF90aGlzLiRtZXNzYWdlLmluZm8oJ+W3suWPlua2iOWIoOmZpCcpDQogICAgICB9DQoNCiAgICAgIGF3YWl0IGF4aW9zLmRlbGV0ZSgnc3lzTW92aWVDYXRlZ29yeS8nICsgaWQpLnRoZW4ocmVzcCA9PiB7DQogICAgICAgIGlmIChyZXNwLmRhdGEuY29kZSAhPT0gMjAwKXsNCiAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfliKDpmaTnlLXlvbHnsbvliKvlpLHotKXvvIEnKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgdGhpcy5nZXRNb3ZpZUNhdGVnb3J5TGlzdCgpDQogICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOeUteW9seexu+WIq+aIkOWKn++8gScpDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["MovieCategory.vue"],"names":[],"mappings":";AAyfile":"MovieCategory.vue","sourceRoot":"src/views/movie","sourcesContent":["<template>\r\n  <div>\r\n    <!--面包屑导航类别-->\r\n    <div class=\"board\">\r\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n        <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>电影管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>电影类别</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n\r\n    <!--卡片视图-->\r\n    <el-card class=\"box-card\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"2\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加类别</el-button>\r\n        </el-col>\r\n        <el-col :span=\"2\">\r\n          <el-button type=\"danger\" @click=\"multipleDelete\">批量删除类别</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <!--类别分类列表-->\r\n      <el-table :data=\"movieCategoryList\" style=\"width: 45%\" border stripe @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column prop=\"movieCategoryId\" label=\"类别编号\" width=\"145\"></el-table-column>\r\n        <el-table-column prop=\"movieCategoryName\" label=\"电影类别\" width=\"180\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"150\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tooltip effect=\"dark\" content=\"修改电影类别\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\r\n              <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.movieCategoryId)\"></el-button>\r\n            </el-tooltip>\r\n            <el-tooltip effect=\"dark\" content=\"删除类别\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\r\n              <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"deleteMovieCategoryById(scope.row.movieCategoryId)\"></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!--分页类别-->\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"queryInfo.pageNum\"\r\n          :page-sizes=\"[5, 7, 9]\"\r\n          :page-size=\"queryInfo.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n    </el-card>\r\n\r\n    <!--添加类别对话框-->\r\n    <el-dialog title=\"添加类别\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n      <!--内容主题区-->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n        <!--prop：在addFormRules中定义校验规则， v-model：双向绑定数据-->\r\n        <el-form-item label=\"电影类别\" prop=\"movieCategoryName\">\r\n          <el-input v-model=\"addForm.movieCategoryName\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!--底部区域-->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"addMovieCategory\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!--修改类别对话框-->\r\n    <el-dialog title=\"修改类别\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"类别编号\">\r\n          <el-input v-model=\"editForm.movieCategoryId\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电影类别\" prop=\"movieCategoryName\">\r\n          <el-input v-model=\"editForm.movieCategoryName\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editMovieCategoryInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"MovieCategory\",\r\n  // this.$message和this.$confirm都属于原型挂载, 在element.js中配置\r\n  // Vue.prototype.$message = Message\r\n  // Vue.prototype.$confirm = MessageBox.confirm\r\n  data() {\r\n    return {\r\n      queryInfo: {\r\n        query: '',\r\n        pageNum: 1,\r\n        pageSize: 7\r\n      },\r\n      movieCategoryList: [],\r\n      total: 0,\r\n      //控制对话框的显示与隐藏\r\n      addDialogVisible: false,\r\n      //添加类别的表单数据\r\n      addForm: {\r\n        movieCategoryName: ''\r\n      },\r\n      //验证表单规则对象\r\n      addFormRules: {\r\n        movieCategoryName: [\r\n          { required: true, message: '请输入电影类别', trigger: 'blur' }\r\n        ]\r\n      },\r\n      editDialogVisible: false,\r\n      editForm: {},\r\n      editFormRules: {\r\n        movieCategoryName: [\r\n          { required: true, message: '请输入电影类别', trigger: 'blur' }\r\n        ]\r\n      },\r\n      multipleSelection: []\r\n    }\r\n  },\r\n  created() {\r\n    this.getMovieCategoryList()\r\n  },\r\n  methods: {\r\n    getMovieCategoryList() {\r\n      const _this = this;\r\n      axios.get('sysMovieCategory/find', {params: _this.queryInfo}).then(resp => {\r\n        console.log(resp)\r\n        _this.movieCategoryList = resp.data.data;\r\n        _this.total = resp.data.total;\r\n        _this.queryInfo.pageSize = resp.data.pageSize;\r\n        _this.queryInfo.pageNum = resp.data.pageNum;\r\n      })\r\n    },\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pageSize = newSize\r\n      this.getMovieCategoryList()\r\n      console.log(newSize)\r\n    },\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pageNum = newPage\r\n      this.getMovieCategoryList()\r\n      console.log(newPage)\r\n    },\r\n    // 监听添加对话框的关闭事件\r\n    addDialogClosed(){\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 监听添加按钮\r\n    addMovieCategory(){\r\n      const _this = this;\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        console.log(valid)\r\n        if (!valid) return\r\n        //预校验成功，发网络请求\r\n        axios.defaults.headers.post['Content-Type'] = 'application/json'\r\n        await axios.post('sysMovieCategory', JSON.stringify(_this.addForm)).then(resp => {\r\n          console.log(resp)\r\n          if (resp.data.code !== 200){\r\n            this.$message.error('添加电影类别失败！')\r\n          }\r\n        })\r\n        //隐藏添加对话框\r\n        this.addDialogVisible = false\r\n        //重新加载列表\r\n        this.getMovieCategoryList()\r\n        this.$message.success('添加电影类别成功！')\r\n      })\r\n    },\r\n    // 显示修改对话框，回显数据\r\n    showEditDialog(id){\r\n      const _this = this\r\n      axios.get('sysMovieCategory/' + id ).then(resp => {\r\n        console.log(resp)\r\n        _this.editForm = resp.data.data\r\n      })\r\n      this.editDialogVisible = true\r\n    },\r\n    // 监听修改对话框的关闭事件\r\n    editDialogClosed(){\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 修改类别分类信息并提交\r\n    editMovieCategoryInfo(){\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        const _this = this\r\n        if (!valid) return\r\n        axios.defaults.headers.put['Content-Type'] = 'application/json'\r\n        await axios.put('sysMovieCategory', JSON.stringify(_this.editForm)).then(resp => {\r\n          if (resp.data.code !== 200){\r\n            this.$message.error('修改电影类别失败！')\r\n          }\r\n        })\r\n        this.editDialogVisible = false\r\n        this.getMovieCategoryList()\r\n        this.$message.success('修改电影类别成功！')\r\n      })\r\n    },\r\n    // 监听多选框变化\r\n    handleSelectionChange(val){\r\n      this.multipleSelection = val\r\n    },\r\n    async multipleDelete(){\r\n      const _this = this\r\n      //询问用户是否确认删除\r\n      const resp = await this.$confirm('此操作将永久删除这些条目, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n\r\n      // 用户确认删除, resp为字符串\"confirm\"\r\n      // 用户取消删除，resp为字符串\"cancel\"\r\n      if (resp === 'cancel'){\r\n        return _this.$message.info('已取消删除')\r\n      }\r\n\r\n      let ids = []\r\n      this.multipleSelection.forEach(data => {\r\n        ids.push(data.movieCategoryId)\r\n      })\r\n      await axios.delete('sysMovieCategory/' + ids).then(resp => {\r\n        if (resp.data.code !== 200){\r\n          this.$message.success('批量删除电影类别失败！')\r\n        }\r\n      })\r\n      this.getMovieCategoryList()\r\n      this.$message.success('批量删除电影类别成功！')\r\n    },\r\n    //根据id删除对应的类别分类\r\n    async deleteMovieCategoryById(id){\r\n      const _this = this\r\n      //询问用户是否确认删除\r\n      const resp = await this.$confirm('此操作将永久删除该条目, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n\r\n      // 用户确认删除, resp为字符串\"confirm\"\r\n      // 用户取消删除，resp为字符串\"cancel\"\r\n      console.log(resp)\r\n      if (resp === 'cancel'){\r\n        return _this.$message.info('已取消删除')\r\n      }\r\n\r\n      await axios.delete('sysMovieCategory/' + id).then(resp => {\r\n        if (resp.data.code !== 200){\r\n          _this.$message.success('删除电影类别失败！')\r\n        }\r\n      })\r\n      this.getMovieCategoryList()\r\n      this.$message.success('删除电影类别成功！')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}
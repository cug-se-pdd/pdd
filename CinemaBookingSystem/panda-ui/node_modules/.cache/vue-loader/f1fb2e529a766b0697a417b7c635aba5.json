{"remainingRequest":"D:\\javaProjects\\pqq\\CinemaBookingSystem\\panda-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\javaProjects\\pqq\\CinemaBookingSystem\\panda-ui\\src\\views\\role\\RoleInfo.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\javaProjects\\pqq\\CinemaBookingSystem\\panda-ui\\src\\views\\role\\RoleInfo.vue","mtime":1715002105632},{"path":"D:\\javaProjects\\pqq\\CinemaBookingSystem\\panda-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715002096653},{"path":"D:\\javaProjects\\pqq\\CinemaBookingSystem\\panda-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1715002095676},{"path":"D:\\javaProjects\\pqq\\CinemaBookingSystem\\panda-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715002096653},{"path":"D:\\javaProjects\\pqq\\CinemaBookingSystem\\panda-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1715002104692}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RoleInfo.vue"],"names":[],"mappings":";AAwfile":"RoleInfo.vue","sourceRoot":"src/views/role","sourcesContent":["<template>\r\n  <div>\r\n    <!--面包屑导航区域-->\r\n    <div class=\"board\">\r\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n        <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>权限管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>角色信息管理</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n    </div>\r\n\r\n\r\n    <!-- 卡片视图 -->\r\n    <el-card>\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"2.5\">\r\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加角色</el-button>\r\n        </el-col>\r\n        <el-col :span=\"2\">\r\n          <el-button type=\"danger\" @click=\"isAbleMultipleDelete\">批量删除</el-button>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-table :data=\"roleList\" border stripe @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n        <el-table-column prop=\"roleId\" label=\"角色编号\" width=\"145\"></el-table-column>\r\n        <el-table-column prop=\"roleName\" label=\"角色名称\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"roleDesc\" label=\"角色描述\" width=\"180\"></el-table-column>\r\n        <el-table-column label=\"操作\" width=\"200\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tooltip effect=\"dark\" content=\"修改角色信息\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\r\n              <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\r\n                         @click=\"showEditDialog(scope.row.roleId)\"></el-button>\r\n            </el-tooltip>\r\n            <el-tooltip effect=\"dark\" content=\"删除角色\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\r\n              <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                         @click=\"isAbleDelete(scope.row.roleId)\"></el-button>\r\n            </el-tooltip>\r\n            <el-tooltip effect=\"dark\" content=\"分配权限\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\r\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"\r\n                         @click=\"showSetRightDialog(scope.row)\"></el-button>\r\n            </el-tooltip>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!--分页区域-->\r\n      <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"queryInfo.pageNum\"\r\n          :page-sizes=\"[5, 7, 9]\"\r\n          :page-size=\"queryInfo.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n\r\n    </el-card>\r\n\r\n    <!--添加角色对话框-->\r\n    <el-dialog title=\"添加角色\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n      <!--内容主题区-->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input v-model=\"addForm.roleName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\r\n          <el-input v-model=\"addForm.roleDesc\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!--底部区域-->\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"addRole\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!--修改角色对话框-->\r\n    <el-dialog title=\"修改角色\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n        <el-form-item label=\"角色编号\" prop=\"roleId\">\r\n          <el-input v-model=\"editForm.roleId\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input v-model=\"editForm.roleName\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\r\n          <el-input v-model=\"editForm.roleDesc\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editRole\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 分配权限对话框 -->\r\n    <el-dialog\r\n        title=\"提示\"\r\n        :visible.sync=\"setRightDialogVisible\"\r\n        width=\"50%\"\r\n        @close=\"setRightDialogClosed\">\r\n      <!-- 树形控件 -->\r\n      <el-tree :data=\"resourceList\"\r\n               :props=\"treeProps\"\r\n               node-key=\"id\"\r\n               :default-checked-keys=\"defKeys\"\r\n               ref=\"treeRef\"\r\n               show-checkbox\r\n               default-expand-all></el-tree>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitRights\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from \"moment\";\r\nexport default {\r\n  name: \"RoleInfo\",\r\n  data() {\r\n    return {\r\n      queryInfo: {\r\n        query: '',\r\n        pageNum: 1,\r\n        pageSize: 7\r\n      },\r\n      roleList: [],\r\n      resourceList: [],\r\n      //树形控件的属性对象\r\n      treeProps: {\r\n        children: 'children',\r\n        label: 'name'\r\n      },\r\n      //默认勾选的权限列表\r\n      defKeys: [],\r\n      total: 0,\r\n      addDialogVisible: false,\r\n      //添加角色的表单数据\r\n      addForm: {\r\n        roleName: '',\r\n        roleDesc: ''\r\n      },\r\n      //验证表单规则对象\r\n      addFormRules: {\r\n        roleName: [\r\n          {required: true, message: '请输入角色名', trigger: 'blur'}\r\n        ],\r\n        roleDesc: [\r\n          {required: true, message: '请输入角色描述', trigger: 'blur'}\r\n        ]\r\n      },\r\n      editDialogVisible: false,\r\n      editForm: {\r\n        roleId: null,\r\n        roleName: '',\r\n        roleDesc: ''\r\n      },\r\n      checkAbleId: {},\r\n      editFormRules: {\r\n        roleName: [\r\n          {required: true, message: '请输入角色名', trigger: 'blur'}\r\n        ],\r\n        roleDesc: [\r\n          {required: true, message: '请输入角色描述', trigger: 'blur'}\r\n        ]\r\n      },\r\n      multipleSelection: [],\r\n      //分配权限对话框的显示与隐藏\r\n      setRightDialogVisible: false,\r\n      //当前分配权限的id\r\n      roleId: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.getRoleList()\r\n  },\r\n  methods: {\r\n    async getRoleList() {\r\n      const {data: res} = await axios.get('sysRole', {params: this.queryInfo})\r\n      this.roleList = res.data;\r\n      this.total = res.total\r\n      this.queryInfo.pageNum = res.pageNum\r\n      this.queryInfo.pageSize = res.pageSize\r\n    },\r\n    handleSizeChange(newSize) {\r\n      this.queryInfo.pageSize = newSize\r\n      this.getRoleList()\r\n    },\r\n    handleCurrentChange(newPage) {\r\n      this.queryInfo.pageNum = newPage\r\n      this.getRoleList()\r\n    },\r\n    // 监听添加对话框的关闭事件\r\n    addDialogClosed() {\r\n      this.$refs.addFormRef.resetFields()\r\n    },\r\n    // 监听添加按钮\r\n    addRole() {\r\n      const _this = this;\r\n      this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        //预校验成功，发网络请求\r\n\r\n        axios.defaults.headers.post['Content-Type'] = 'application/json'\r\n        const {data: res} = await axios.post('sysRole', JSON.stringify(_this.addForm))\r\n        if (res.code !== 200) return this.$message.error(res.msg)\r\n        //隐藏添加对话框\r\n        this.addDialogVisible = false\r\n        //重新加载列表\r\n        await this.getRoleList()\r\n        this.$message.success('添加角色信息成功！')\r\n      })\r\n    },\r\n    // 显示修改对话框，回显数据\r\n    async showEditDialog(id) {\r\n      const _this = this\r\n      await axios.get('sysRole/' + id).then(resp => {\r\n        console.log(resp)\r\n        _this.editForm = resp.data.data\r\n      })\r\n      this.editDialogVisible = true\r\n    },\r\n    // 监听修改对话框的关闭事件\r\n    editDialogClosed() {\r\n      this.$refs.editFormRef.resetFields()\r\n    },\r\n    // 修改角色信息并提交\r\n    editRole() {\r\n      this.$refs.editFormRef.validate(async valid => {\r\n        const _this = this\r\n        if (!valid) return\r\n        axios.defaults.headers.put['Content-Type'] = 'application/json'\r\n        const {data: res} = await axios.put('sysRole/', JSON.stringify(_this.editForm))\r\n        if (res.code !== 200) return this.$message.error(res.msg)\r\n\r\n        this.editDialogVisible = false\r\n        await this.getRoleList()\r\n        this.$message.success('修改角色信息成功！')\r\n      })\r\n    },\r\n    // 监听多选框变化\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n    },\r\n    // 批量删除前校验\r\n    async isAbleMultipleDelete() {\r\n      let ableMultipleDelete = true\r\n      let ids = ''\r\n      for (let i = 0; i < this.multipleSelection.length; i++) {\r\n        this.checkAbleId.roleId = this.multipleSelection[i].roleId\r\n        const { data : res } = await axios.get('sysUser', {params: this.checkAbleId})\r\n        if (res.data.length !== 0) {\r\n          ids += this.multipleSelection[i].roleId + ' '\r\n          ableMultipleDelete = false\r\n        }\r\n      }\r\n      if (ableMultipleDelete === false) {\r\n        this.$alert('抱歉！有用户与当前要删除的角色相关联，不能删除角色信息。\\n' + '导致异常的角色编号为: ' + ids, '批量删除请求异常通知', {\r\n          confirmButtonText: '我知道了',\r\n          callback: action => {\r\n            this.$router.push('/role')\r\n          }\r\n        })\r\n        return\r\n      }\r\n      await this.multipleDelete()\r\n    },\r\n    async multipleDelete() {\r\n      const _this = this\r\n      //询问用户是否确认删除\r\n      const resp = await this.$confirm('此操作将永久删除这些条目, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n\r\n      // 用户确认删除, resp为字符串\"confirm\"\r\n      // 用户取消删除，resp为字符串\"cancel\"\r\n      if (resp === 'cancel') {\r\n        return _this.$message.info('已取消删除')\r\n      }\r\n\r\n      let ids = []\r\n      this.multipleSelection.forEach(data => {\r\n        ids.push(data.roleId)\r\n      })\r\n      let success = true\r\n      await axios.delete('sysRole/' + ids).then(resp => {\r\n        if (resp.data.code !== 200) {\r\n          success = false;\r\n        }\r\n      })\r\n      if (!success) return this.$message.error('批量删除资源信息失败！')\r\n      await this.getRoleList()\r\n      this.$message.success('批量删除资源信息成功！')\r\n    },\r\n    async isAbleDelete(id) {\r\n      this.checkAbleId.roleId = id\r\n      await axios.get('sysUser', {params: this.checkAbleId}).then(response => {\r\n        console.log(response.data.total)\r\n        let users = response.data.data\r\n        if (response.data.total === 0) {\r\n          console.log('空的可改')\r\n          this.deleteRoleById(id)\r\n        } else {\r\n          console.log('删除前判断有相关联的user')\r\n          let ids = ''\r\n          for (let temp of users) {\r\n            console.log(temp)\r\n            ids += temp.userId+' '\r\n          }\r\n          console.log('users is : '+ids)\r\n          this.$alert('抱歉！有用户与当前要删除的角色相关联，不能删除角色信息。\\n'+'导致异常的用户编号为: '+ids, '删除请求异常通知', {\r\n            confirmButtonText: '我知道了',\r\n            callback: action => {\r\n              this.$router.push('/role')\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    //根据id删除对应的资源信息\r\n    async deleteRoleById(roleId) {\r\n      const _this = this\r\n      //询问用户是否确认删除\r\n      const resp = await this.$confirm('此操作将永久删除该条目, 是否继续?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n\r\n      // 用户确认删除, resp为字符串\"confirm\"\r\n      // 用户取消删除，resp为字符串\"cancel\"\r\n      console.log(resp)\r\n      if (resp === 'cancel') {\r\n        return _this.$message.info('已取消删除')\r\n      }\r\n\r\n      let success = true\r\n      await axios.delete('sysRole/' + roleId).then(resp => {\r\n        if (resp.data.code !== 200) {\r\n          success = false\r\n        }\r\n      })\r\n      if (!success) return _this.$message.error('删除角色信息失败！')\r\n      await this.getRoleList()\r\n      this.$message.success('删除角色信息成功！')\r\n    },\r\n    //展示分配权限对话框\r\n    async showSetRightDialog(role) {\r\n      this.roleId = role.roleId\r\n      const {data: res} = await axios.get('sysResource/tree')\r\n      this.resourceList = res.data\r\n      console.log(role)\r\n      await this.getLeafKeys(role, this.defKeys)\r\n      console.log('defKeys' + this.defKeys)\r\n      this.setRightDialogVisible = true\r\n    },\r\n    //获取角色对应的所有具体权限id\r\n    getLeafKeys(node, arr) {\r\n      if(!node) return\r\n      if (!node.children) {\r\n        return arr.push(node.id)\r\n      }\r\n\r\n      node.children.forEach(item => this.getLeafKeys(item, arr))\r\n    },\r\n    //关闭分配权限对话框，刷新defKeys\r\n    setRightDialogClosed() {\r\n      this.defKeys = []\r\n    },\r\n    async submitRights() {\r\n      const keys = [\r\n          ...this.$refs.treeRef.getCheckedKeys(true)\r\n      ]\r\n      const _this = this\r\n      axios.defaults.headers.post['Content-Type'] = 'application/json'\r\n      const {data : res} = await axios.post('sysRole/' + _this.roleId, JSON.stringify(keys))\r\n      if(res.code !== 200) return this.$message.error(\"更新权限失败！\")\r\n\r\n      this.$message.success(\"更新权限成功！\")\r\n      await this.getRoleList()\r\n      this.setRightDialogVisible = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]}]}